{"ast":null,"code":"var _jsxFileName = \"/Users/james/Desktop/react-course/final-project/src/LoadingIndicator.js\",\n  _s = $RefreshSig$();\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingIndicator() {\n  _s();\n  let [visible, setVisible] = useState(false);\n  useEffect(() => {\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      setVisible(true);\n      return config;\n    });\n    const responseInterceptor = axios.interceptors.response.use(response => {\n      setVisible(false);\n      return response;\n    }, error => {\n      setVisible(false);\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  if (!visible) return null;\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    variant: \"light\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_s(LoadingIndicator, \"cz/DzCD06IMMsoBJ0A1IgCy1P5M=\");\n_c = LoadingIndicator;\nexport default LoadingIndicator;\nvar _c;\n$RefreshReg$(_c, \"LoadingIndicator\");","map":{"version":3,"names":["Spinner","useState","useEffect","axios","jsxDEV","_jsxDEV","LoadingIndicator","_s","visible","setVisible","requestInterceptor","interceptors","request","use","config","responseInterceptor","response","error","Promise","reject","eject","animation","size","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/james/Desktop/react-course/final-project/src/LoadingIndicator.js"],"sourcesContent":["import Spinner from 'react-bootstrap/Spinner'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nfunction LoadingIndicator() {\n    let [visible, setVisible] = useState(false);\n\n    useEffect(() => {\n        const requestInterceptor = axios.interceptors.request.use((config) => {\n            setVisible(true);\n            return config;\n        });\n\n        const responseInterceptor = axios.interceptors.response.use(\n            (response) => {\n                setVisible(false);\n                return response;\n            },\n            (error) => {\n                setVisible(false);\n                return Promise.reject(error);\n            }\n        );\n        \n        return () => {\n            axios.interceptors.request.eject(requestInterceptor);\n            axios.interceptors.response.eject(responseInterceptor);\n        };\n    }, []);\n\n    if (!visible) return null;\n\n    return <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" />;\n}\n\nexport default LoadingIndicator"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,kBAAkB,GAAGP,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;MAClEL,UAAU,CAAC,IAAI,CAAC;MAChB,OAAOK,MAAM;IACjB,CAAC,CAAC;IAEF,MAAMC,mBAAmB,GAAGZ,KAAK,CAACQ,YAAY,CAACK,QAAQ,CAACH,GAAG,CACtDG,QAAQ,IAAK;MACVP,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOO,QAAQ;IACnB,CAAC,EACAC,KAAK,IAAK;MACPR,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOS,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAChC,CACJ,CAAC;IAED,OAAO,MAAM;MACTd,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACQ,KAAK,CAACV,kBAAkB,CAAC;MACpDP,KAAK,CAACQ,YAAY,CAACK,QAAQ,CAACI,KAAK,CAACL,mBAAmB,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACP,OAAO,EAAE,OAAO,IAAI;EAEzB,oBAAOH,OAAA,CAACL,OAAO;IAACqB,SAAS,EAAC,MAAM;IAACC,IAAI,EAAC,IAAI;IAACC,OAAO,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE;AAACpB,EAAA,CA7BQD,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AA+BzB,eAAeA,gBAAgB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}